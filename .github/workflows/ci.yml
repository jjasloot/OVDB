name: OVDB CI

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: OV_DB/OVDBFrontend/package-lock.json
      - name: Build frontend
        run: |
          cd OV_DB/OVDBFrontend
          npm install
          npm run build
  
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Build backend
        run: |
          cd OV_DB
          dotnet build
  
  test-unit:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Run unit tests
        run: |
          cd OV_DB.Tests
          dotnet test --verbosity normal --logger "trx;LogFileName=test-results.trx"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: OV_DB.Tests/TestResults/*.trx
  
  test-integration:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Run integration tests
        run: |
          cd OV_DB.IntegrationTests
          dotnet test --verbosity normal --logger "trx;LogFileName=integration-test-results.trx"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: OV_DB.IntegrationTests/TestResults/*.trx
